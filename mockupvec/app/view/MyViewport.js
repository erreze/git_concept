/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    cls: 'mainContainer',
                    layout: {
                        type: 'absolute'
                    },
                    items: [
                        {
                            xtype: 'container',
                            x: 20,
                            y: 0,
                            cls: 'headerVec',
                            height: 110,
                            layout: {
                                type: 'absolute'
                            },
                            items: [
                                {
                                    xtype: 'image',
                                    x: 0,
                                    y: 0,
                                    height: 110,
                                    width: 130,
                                    src: 'static/images/logoVerizon.jpg'
                                },
                                {
                                    xtype: 'label',
                                    x: 150,
                                    y: 70,
                                    cls: 'repairsTitle',
                                    text: 'REPAIRS'
                                },
                                {
                                    xtype: 'combobox',
                                    x: 375,
                                    y: 56,
                                    fieldLabel: 'Label'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            x: 170,
                            y: 220,
                            store: 'MyJsonStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        console.log( record.data);
                                        if ( record.data.flag == 1 ){
                                            return '<img class = "fotoGrid" src="http://localhost/git_concept/mockupvec/static/images/flagOn.png">';
                                        }else{
                                            return '<img class = "fotoGrid" src="http://localhost/git_concept/mockupvec/static/images/flagOff.png">';
                                        }

                                    },
                                    dataIndex: 'flag',
                                    text: 'Flag'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<a href = "#" id = "ticketNumber">' + record.data.ticketNumber + '</a>';
                                    },
                                    dataIndex: 'ticketNumber',
                                    text: 'Ticket Number'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'status',
                                    text: 'Status'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'serviceID',
                                    text: 'Service ID'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'issueType',
                                    text: 'Issuetype'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'productType',
                                    text: 'Producttype'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'createdDate',
                                    text: 'createdDate'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'primaryContact',
                                    text: 'primaryContact'
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            x: 20,
                            y: 120,
                            cls: 'nav',
                            height: 70,
                            html: '<div>\n    <lu>\n        <li class="current">TICKETS</li>\n        <li>TESTS</li>\n        <li>REPORTS</li>\n    </lu>\n</div>',
                            layout: {
                                type: 'absolute'
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    cls: 'finder',
                                    componentCls: 'container',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            cls: 'filterType',
                                            fieldLabel: 'Find Tickets by',
                                            labelWidth: 90,
                                            blankText: '',
                                            emptyText: 'Ticket Number',
                                            store: [
                                                [
                                                    1,
                                                    'Ticket Number'
                                                ],
                                                [
                                                    1,
                                                    'Status'
                                                ],
                                                [
                                                    1,
                                                    'Service ID'
                                                ],
                                                [
                                                    1,
                                                    'Product Type'
                                                ],
                                                [
                                                    1,
                                                    'Primary contact'
                                                ]
                                            ]
                                        },
                                        {
                                            xtype: 'textfield',
                                            cls: 'filterValue'
                                        },
                                        {
                                            xtype: 'button',
                                            cls: 'filterbtn',
                                            text: 'GO'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});